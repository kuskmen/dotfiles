set nocompatible
set nu

call plug#begin('~/.vim/plugged')

Plug 'junegunn/vim-plug'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'Rip-Rip/clang_complete'
Plug 'itchyny/lightline.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'jiangmiao/auto-pairs'
Plug 'skywind3000/asyncrun.vim'
Plug 'ervandew/supertab'
Plug 'rhysd/vim-clang-format'
Plug 'altercation/vim-colors-solarized'
Plug 'xuhdev/SingleCompile'

call plug#end()

" Easier split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Background color
syntax enable
set background=dark
let g:solarized_termcolors=256
colorscheme solarized

autocmd VimEnter * copen 6 | wincmd p

autocmd BufEnter * call MyLastWindow()
function! MyLastWindow()
	if &buftype=="quickfix"
		if winnr('$') < 2
			quit!		
		endif
	endif
endfunction

" Move lines easily
nnoremap <A-Up> :m .-2<CR>==
nnoremap <A-Down> :m .+1<CR>==
inoremap <A-Up> <Esc>:m .-2<CR>==gi
inoremap <A-Down> <Esc>:m .+1<CR>==gi
vnoremap <A-Up> :m '<-2<CR>gv==gv
vnoremap <A-Down> :m '>+1<CR>gv==gv

" Spaces are better than tabs
set smarttab
set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab

" Navigate tabs
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>
inoremap <C-Left> :tabprevious<CR>
inoremap <C-Right> :tabnext<CR>
nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . (tabpagenr()+1)<CR>

" Incremental search
set incsearch

" Highlight search
set hlsearch

" jj to escape in insert mode. Who writes jj anyway?
inoremap jj <Esc>

" CTRL-s to save
nnoremap <silent> <C-s> :write<CR>

" Compile/Execute C++ files
autocmd filetype cpp nnoremap <F5> :!g++ -o %:r.out % -std=c++17<Enter>
autocmd filetype cpp nnoremap <C-F5> :AsyncRun g++ -o %:r.out % -std=c++17 && ./%:r.out<Enter>
" autocmd filetype cpp nnoremap <F5> :SCCompile<CR>
" autocmd filetype cpp nnoremap <C-F5> :SCCompileRun<CR>

" Disable beep and flash with an autocmd "
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

" status bar fix
set laststatus=2
let g:lightline = { 
\        'colorscheme': 'wombat',
\        'active': {
\         'left': [ [ 'mode', 'paste' ],
\                   [ 'gitbranch', 'filename', 'readonly', 'modified' ]]
\        },
\        'component_function': { 
\                'gitbranch': 'fugitive#head' 
\        }, 
\ }

" path to the c++ library
let g:clang_library_path='/usr/lib/llvm-3.8/lib/libclang-3.8.so.1'

" Configurations for nerd tree
map <C-o> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
let NERDTreeMapOPenInTab='<ENTER>'

" Search for files (fzf)
command! -bang -nargs=? -complete=dir HFiles
                        \ call fzf#vim#files(<q-args>, {'source':'ag --hidden --ignore .git -g ""'}, <bang>0)
map <C-f> :Files<CR>

" fzf layout
let g:fzf_layout = { 'left': '~30%' }

" clang-format configurations 
autocmd FileType cpp ClangFormatAutoEnable
autocmd FileType c, cpp nnoremap <buffer><C-S-k> :ClangFormat<CR>
autocmd FileType c, cpp vnoremap <buffer><C-S-k> :ClangFormat<CR>
let g:clang_format#style_options = {
                        \ "AccessModifierOffset": -4,
                        \ "AlwaysBreakTemplateDeclarations": "true",
                        \ "Standard": "C++11",
                        \ "BreakBeforeBraces": "Stroustrup" }

" NerdCommenterer configurations
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDTrimTrailingWhitespace = 1
let g:NERDSpaceDelims = 1
